[
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu về Tạo pipeline CI/CD trên AWS",
	"tags": [],
	"description": "",
	"content": "Workshop: Tạo pipeline tự động hóa xây dựng, kiểm thử, và triển khai ứng dụng trên AWS Trong workshop này, chúng ta sẽ học cách sử dụng các dịch vụ AWS để xây dựng và triển khai một pipeline CI/CD hoàn chỉnh. Mục tiêu là tự động hóa quá trình xây dựng, kiểm thử và triển khai một ứng dụng web hoặc container mà không cần phát triển trên máy cục bộ.\nCác dịch vụ AWS cần thiết cho workshop này: CodeCommit: Dịch vụ lưu trữ mã nguồn giúp quản lý và chia sẻ mã ứng dụng. CodePipeline: Tự động hóa luồng công việc CI/CD, giúp triển khai mã nguồn từ CodeCommit qua các bước build, kiểm thử và triển khai. CodeBuild: Xây dựng và kiểm thử mã nguồn từ CodeCommit, cho phép tạo Docker image và push lên ECR. ECR (Elastic Container Registry): Kho lưu trữ Docker image, nơi chứa các bản build của ứng dụng. ECS (Elastic Container Service): Chạy và quản lý container trên hạ tầng AWS, giúp triển khai ứng dụng dễ dàng với Fargate. ALB (Application Load Balancer): Phân phối lưu lượng truy cập tới các container ứng dụng, đảm bảo khả năng mở rộng và ổn định cho dịch vụ. IAM (Identity and Access Management): Quản lý quyền truy cập và cấp quyền cho các dịch vụ như CodePipeline, CodeBuild và ECS để đảm bảo an toàn và hiệu quả. S3 (Simple Storage Service): Lưu trữ các artifacts hoặc log từ CodeBuild, giúp theo dõi và phân tích quá trình build. Kế hoạch workshop: Trong suốt workshop, bạn sẽ từng bước:\nThiết lập CodeCommit để lưu trữ mã nguồn của ứng dụng. Cấu hình CodePipeline để tự động hóa quá trình CI/CD. Sử dụng CodeBuild để xây dựng Docker image và push lên ECR. Triển khai ứng dụng container trên ECS với Application Load Balancer. Sử dụng IAM để quản lý quyền truy cập an toàn cho các dịch vụ AWS. Lưu trữ log và artifacts trong S3 để kiểm tra và phân tích. Bây giờ, hãy bắt đầu với từng bước chi tiết để thiết lập pipeline CI/CD trên AWS!\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Session Management",
	"tags": [],
	"description": "",
	"content": "Làm việc với Amazon System Manager - Session Manager Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về Amazon System Manager - Session Management. Thực hành tạo kết nối đến máy chủ public và máy chủ private trong VPC.\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.1-updateiamrole/",
	"title": "Cập nhật IAM Role",
	"tags": [],
	"description": "",
	"content": "Để các EC2 instance của chúng ta có thể gửi session log tới S3 bucket , chúng ta sẽ cần cập nhật IAM Role đã gán vào EC2 instance bằng cách thêm vào policy cho phép quyền truy cập vào S3.\nCập nhật IAM Role Truy cập vào giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click vào role SSM-Role. Click Attach policies.\nTại ô Search điền S3.\nClick chọn policy AmazonS3FullAccess. Click Attach policy. Trong thực tế chúng ta sẽ cấp quyền chặt chẽ hơn tới S3 bucket chỉ định. Trong khuôn khổ bài lab này chúng ta sử dụng policy AmazonS3FullAccess cho tiện dụng.\nTiếp theo chúng ta sẽ tiến hành tạo S3 bucket để lưu trữ session logs.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-networking/",
	"title": "Chuẩn bị VPC và EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo một VPC với 2 subnet công khai và riêng tư. Sau đó, tạo một EC2 Instance Linux nằm trong subnet công khai và một EC2 Instance Windows nằm trong subnet riêng tư.\nKiến trúc tổng quan sau khi bạn hoàn thành bước này sẽ như sau:\nĐể tìm hiểu cách tạo các instance EC2 và VPC với subnet công khai/riêng tư, bạn có thể tham khảo bài lab:\nGiới thiệu về Amazon EC2 Làm việc với Amazon VPC Nội dung Tạo VPC Tạo Subnet công khai Tạo Subnet riêng tư Tạo nhóm bảo mật Tạo máy chủ Linux công khai Tạo máy chủ Windows riêng tư "
},
{
	"uri": "//localhost:1313/vi/6-applicationdeployment/6.1-ecs/",
	"title": "ECS",
	"tags": [],
	"description": "",
	"content": "Phần này sẽ hướng dẫn bạn cấu hình Amazon ECS để triển khai ứng dụng container hóa. ECS cung cấp giải pháp quản lý container trên AWS, giúp ứng dụng của bạn dễ dàng mở rộng và an toàn hơn.\nBước 6.1.1: Tạo ECS Cluster Truy cập vào ECS Console.\nChọn Clusters và nhấp vào Create Cluster. Chọn loại cluster Networking only hoặc EC2 Linux + Networking nếu muốn chạy trên EC2.\nĐặt tên cho cluster, ví dụ: Lab-Cluster. Cấu hình VPC và subnet để ECS cluster hoạt động. Nhấp Create để tạo ECS Cluster.\nKiểm tra xem cluster đã được tạo thành công. Bước 6.1.2: Tạo Task Definition Trong ECS Console, điều hướng đến Task Definitions và chọn Create new Task Definition.\nChọn EC2 hoặc Fargate tùy thuộc vào cấu hình mong muốn. Cấu hình Task Definition:\nTên Task: Đặt tên cho task (ví dụ: Lab-Task). Thêm cài đặt cho container: Tên Container: Lab-Container Image: Docker image của ứng dụng (ví dụ, nginx:latest) Port mappings: 80:80 (hoặc cổng mà ứng dụng sử dụng) Cấu hình tài nguyên (CPU, memory) theo yêu cầu.\nNhấp Create để lưu Task Definition. Bước 6.1.3: Chạy Task trên ECS Trong ECS Console, điều hướng đến Clusters và chọn Lab-Cluster.\nChọn Run Task để khởi chạy task. Cấu hình task:\nLaunch type: Chọn EC2 hoặc Fargate. Task Definition: Chọn Task Definition đã tạo. Nhấp Run Task để triển khai container trên ECS.\nKiểm tra xem task đã khởi chạy thành công. "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.1-public-instance/",
	"title": "Kết nối đến máy chủ Public",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ EC2. Click chọn Public Linux Instance. Click Actions. Click Security. Click Modify IAM role. Tại trang Modify IAM role. Click chọn SSM-Role. Click Save. Bạn sẽ cần chờ khoảng 10 phút trước khi thực hiện bước tiếp theo. Thời gian này EC2 instance của chúng ta sẽ tự động đăng ký với Session Manager.\nTruy cập vào giao diện quản trị của dịch vụ AWS Systems Manager Kéo thanh trượt menu bên trái xuống dưới. Click Session Manager. Click Start Session. Sau đó chọn Public Linux Instance và click Start session để truy cập vào instance. Terminal sẽ xuất hiện trên trình duyệt. Kiểm tra với câu lệnh sudo tcpdump -nn port 22 và sudo tcpdump chúng ta sẽ thấy không có traffic của SSH mà chỉ có traffic HTTPS. Ở trên, chúng ta đã tạo kết nối vào public instance mà không cần mở cổng SSH 22, giúp cho việc bảo mật tốt hơn, tránh mọi sự tấn công tới cổng SSH.\nMột nhược điểm của cách làm trên là ta phải mở Security Group outbound ở cổng 443 ra ngoài internet. Vì là public instance nên có thể sẽ không vấn đề gì nhưng nếu bạn muốn bảo mật hơn nữa, bạn có thể khoá cổng 443 ra ngoài internet mà vẫn sử dụng được Session Manager. Chúng ta sẽ đi qua cách làm này ở phần private instance dưới đây.\nBạn có thể terminate để kết thúc session đang kết nối trước khi qua bước tiếp theo.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.1-enablevpcdns/",
	"title": "Kích hoạt DNS hostnames",
	"tags": [],
	"description": "",
	"content": "Kích hoạt tính năng DNS hostnames trên VPC. Để tạo được VPC Endpoint chúng ta sẽ cần bật tính năng DNS hostnames trên VPC. Truy cập đến giao diện quản trị của dịch vụ VPC\nClick Your VPCs.\nChọn Lab VPC.\nClick Actions.\nClick Edit DNS hostnames.\nClick Endpoint, sau đó click Create Endpoint.\nTại trang Edit DNS hostnames. Click chọn Enable. Click Save changes. "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.1-endpointssm/",
	"title": "Tạo Endpoint ssm",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSM Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSM. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: SSM sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ssm. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ssm. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint cho SSM. "
},
{
	"uri": "//localhost:1313/vi/5-cicdpipeline/5.1-codecommit/",
	"title": "Tạo Repository CodeCommit",
	"tags": [],
	"description": "",
	"content": "Tạo Repository CodeCommit để Quản lý Mã Nguồn Truy cập AWS CodeCommit console.\nNhấp vào Create repository. Trên trang Create repository:\nTrong trường Repository name, nhập MyAppRepo. Thêm mô tả tùy chọn. Nhấp vào Create repository. Sau khi tạo, ghi lại URL của repository, sẽ được sử dụng để đẩy mã nguồn vào repository này.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-networking/2.1.1-createvpc/",
	"title": "Tạo VPC",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Lab VPC Truy cập giao diện quản trị dịch vụ VPC Chọn Your VPC. Chọn Create VPC. Tại trang Create VPC. Trong mục Name tag, điền Lab VPC. Trong mục IPv4 CIDR, nhập: 10.10.0.0/16. Nhấn Create VPC. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rĐể thực hiện workshop này, bạn cần có một repository lưu trữ mã nguồn trên AWS CodeCommit, thiết lập pipeline CI/CD, và các dịch vụ hỗ trợ khác trên AWS để triển khai tự động hóa.\nYêu cầu chuẩn bị trước Tạo repository trên CodeCommit: Đây sẽ là nơi lưu trữ mã nguồn của ứng dụng mà chúng ta sẽ tự động hóa quá trình build và triển khai.\nTruy cập AWS CodeCommit Console và tạo một repository mới. Tham khảo hướng dẫn chi tiết tại đây. Cấu hình IAM Role: Tạo IAM Role có các quyền cần thiết cho CodePipeline, CodeBuild, ECS, và các dịch vụ khác để thực hiện CI/CD.\nTruy cập AWS IAM Console và tạo IAM Role với quyền cho CodePipeline, CodeBuild, và ECS. Đảm bảo role có quyền truy cập vào S3 để lưu trữ artifacts và logs từ quá trình build. Thiết lập ECR (Elastic Container Registry): Tạo repository trên ECR để lưu trữ Docker images sau khi được build.\nTruy cập AWS ECR Console và tạo một repository mới cho Docker images của bạn. Thiết lập CodePipeline: Tạo pipeline để quản lý và tự động hóa quy trình CI/CD.\nTruy cập AWS CodePipeline Console và tạo pipeline với các bước Source (CodeCommit), Build (CodeBuild), và Deploy (ECS). Đảm bảo pipeline được liên kết với CodeCommit và CodeBuild cho quy trình build, và ECS cho quy trình triển khai. Cấu hình CodeBuild: Tạo project trong CodeBuild để thực hiện build và kiểm thử ứng dụng.\nTruy cập AWS CodeBuild Console và tạo build project mới. Sử dụng file buildspec.yml để cấu hình các bước build, push Docker image lên ECR, và kiểm thử (nếu cần). Thiết lập ECS (Elastic Container Service): Tạo ECS Cluster và Task Definition để quản lý các container.\nTruy cập AWS ECS Console, tạo ECS Cluster với Fargate hoặc EC2. Tạo Task Definition cho container, với Docker image từ ECR. Thiết lập Application Load Balancer (ALB): Tạo ALB để phân phối lưu lượng đến các container ứng dụng.\nTruy cập AWS EC2 Console và tạo Application Load Balancer trong Public Subnet. Liên kết ALB với ECS Service để phân phối traffic. S3 Bucket (tuỳ chọn): Nếu cần lưu trữ logs hoặc artifacts từ CodeBuild, tạo bucket S3.\nTruy cập AWS S3 Console và tạo bucket mới để lưu trữ logs và artifacts. Nội dung chuẩn bị Tạo repository trên CodeCommit Cấu hình IAM Role cho CI/CD Thiết lập ECR cho Docker Images Tạo pipeline trong CodePipeline Cấu hình project trong CodeBuild Thiết lập ECS Cluster và Task Definition Thiết lập Application Load Balancer (ALB) Tạo S3 Bucket cho logs và artifacts (tuỳ chọn) "
},
{
	"uri": "//localhost:1313/vi/6-applicationdeployment/6.2-loadbalancer/",
	"title": "Load Balancer",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ thiết lập Application Load Balancer (ALB) để phân phối lưu lượng truy cập đến các container trong ECS Cluster. ALB giúp cải thiện khả năng chịu tải và đảm bảo độ tin cậy cho ứng dụng của bạn.\nBước 6.2.1: Tạo Application Load Balancer Truy cập vào EC2 Console.\nChọn Load Balancers và nhấp vào Create Load Balancer. Chọn Application Load Balancer và cấu hình như sau:\nTên: Lab-ALB Scheme: Internet-facing hoặc Internal IP address type: IPv4 VPC: Chọn VPC mà ECS đang chạy trong đó. Cấu hình Listener:\nListener: Cổng 80 hoặc 443 nếu muốn bảo mật SSL. Target Group: Tạo Target Group cho các container trong ECS Cluster. Nhấp Create Load Balancer để hoàn tất.\nBước 6.2.2: Liên kết ALB với ECS Service Trong ECS Console, điều hướng đến Clusters và chọn Lab-Cluster.\nChọn Services và chỉnh sửa service muốn liên kết với ALB. Cấu hình Service:\nLoại Load Balancer: Application Load Balancer Target Group: Chọn Target Group đã tạo từ ALB. Nhấp Update để lưu thay đổi.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.2-endpointssmmessages/",
	"title": "Tạo Endpoint ssmmessages",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSMMESSAGES Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSMMESSAGES. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: ssmmessages sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ssmmessages. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ssmmessages. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint SSMMESSAGES. "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/",
	"title": "Tạo kết nối đến máy chủ EC2 Private",
	"tags": [],
	"description": "",
	"content": "Đối với Windows instance nằm trong private subnet, không có public IP, không có internet gateway nên không thể đi ra ngoài internet.\nVới loại instance này, cách làm truyền thống là ta sẽ sử dụng kỹ thuật Bastion host tốn nhiều chi phí và công sức, nhưng ở đây chúng ta sẽ sử dụng Session Manager với loại này.\nCơ bản là private instance vẫn phải mở cổng TCP 443 tới System Manager, nhưng không cho kết nối đó đi ra ngoài internet mà chỉ cho đi trong chính VPC của mình, nên đảm bảo được vấn đề bảo mật.\nĐể làm được điều đó, ta phải đưa endpoint của System Manager vào trong VPC, nghĩa là sử dụng VPC interface endpoint:\nVPC interface endpoint được gắn với subnet nên cách làm này không những với private subnet mà còn có thể làm với public subnet, nghĩa là với public subnet, bạn hoàn toàn có thể không cho TCP 443 đi ra ngoài internet.\nNội dung: Kích hoạt DNS hostnames Tạo VPC Endpoint Kết nối Private Instance "
},
{
	"uri": "//localhost:1313/vi/5-cicdpipeline/5.2-codepipeline/",
	"title": "Tạo Pipeline",
	"tags": [],
	"description": "",
	"content": "Tạo Pipeline với CodePipeline Truy cập vào giao diện quản trị dịch vụ CodePipeline.\nNhấn Create pipeline. Trong Pipeline name, nhập tên pipeline, ví dụ: MyAppPipeline. Trong Service role, chọn New service role để tạo vai trò mới hoặc Existing service role nếu bạn đã có vai trò. Nhấn Next để thiết lập Source stage.\nỞ mục Source provider, chọn CodeCommit. Chọn repository và branch mà bạn đã tạo ở bước CodeCommit. Nhấn Next. Thiết lập Build stage.\nỞ mục Build provider, chọn CodeBuild. Chọn Project bạn đã tạo ở bước CodeBuild. Thiết lập Deploy stage.\nChọn ECS hoặc S3 tùy thuộc vào loại ứng dụng của bạn. Nhấn Create pipeline để hoàn tất.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-compute/2.1.6-createec2windows/",
	"title": "Tạo Private Instance",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ EC2.\nNhấn chọn Instances. Nhấn Launch instances. Tại trang Step 1: Choose an Amazon Machine Image (AMI).\nCuộn xuống. Nhấn Select để chọn AMI Microsoft Windows Server 2019 Base. Tại trang Step 2: Choose an Instance Type. Chọn loại instance t2.micro. Nhấn Next: Configure Instance Details. Tại trang Step 3: Configure Instance Details. Tại mục Network, chọn Lab VPC. Tại mục Subnet, chọn Lab Private Subnet. Tại mục Auto-assign Public IP, chọn Use subnet setting (Disable). Nhấn Next: Add Storage. Nhấn Next: Add Tags để chuyển đến bước tiếp theo.\nNhấn Next: Configure Security Group để tiếp tục. Tại trang Step 6: Configure Security Group.\nChọn Select an existing security group. Chọn security group SG Private Windows Instance. Nhấn Review and Launch. Hộp thoại cảnh báo xuất hiện do chưa cấu hình firewall cho phép kết nối tới cổng 22. Nhấn Continue để tiếp tục.\nTại trang Step 7: Review Instance Launch.\nNhấn Launch. Trong hộp thoại Select an existing key pair or create a new key pair.\nChọn Choose an existing key pair. Tại mục Key pair name, chọn LabKeypair. Chọn hộp kiểm I acknowledge that I have access to the corresponding private key file, and that without this file, I won\u0026rsquo;t be able to log into my instance. Nhấn Launch Instances để tạo EC2 instance. Nhấn View Instances để quay lại danh sách các EC2 instances.\nNhấn biểu tượng chỉnh sửa dưới cột Name.\nTrong hộp thoại Edit Name, điền Private Windows Instance. Nhấn Save. Tiếp theo, chúng ta sẽ tạo IAM Roles để hỗ trợ cho Session Manager.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-networking/2.1.2-createpublicsubnet/",
	"title": "Tạo Public subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Public subnet Nhấn chọn Subnets. Nhấn chọn Create subnet. Tại trang Create subnet. Tại mục VPC ID, chọn Lab VPC. Tại mục Subnet name, điền Lab Public Subnet. Tại mục Availability Zone, chọn Availability Zone đầu tiên. Tại mục IPv4 CIDR block, điền 10.10.1.0/24. Cuộn xuống cuối trang và nhấn chọn Create subnet.\nChọn Lab Public Subnet vừa tạo.\nNhấn chọn Actions. Nhấn chọn Edit subnet settings. Kích hoạt Enable auto-assign public IPv4 address. Nhấn Save. Nhấn chọn Internet Gateways. Nhấn chọn Create internet gateway. Tại trang Create internet gateway. Tại mục Name tag, điền Lab IGW. Nhấn Create internet gateway. Sau khi tạo thành công, chọn Actions. Nhấn Attach to VPC. Tại trang Attach to VPC. Tại mục Available VPCs, chọn Lab VPC. Nhấn Attach internet gateway. Kiểm tra quá trình gắn kết thành công như hình dưới. Tiếp theo, chúng ta sẽ tạo một custom route table để gán vào Lab Public Subnet. Nhấn chọn Route Tables. Nhấn chọn Create route table. Tại trang Create route table. Tại mục Name, điền Lab Publicrtb. Tại mục VPC, chọn Lab VPC. Nhấn Create route table. Sau khi tạo route table thành công. Nhấn Edit routes. Tại trang Edit routes. Nhấn Add route. Tại mục Destination, điền 0.0.0.0/0. Tại mục Target, chọn Internet Gateway, sau đó chọn Lab IGW. Nhấn Save changes. Nhấn tab Subnet associations. Nhấn Edit subnet associations để gán custom route table vừa tạo vào Lab Public Subnet. Tại trang Edit subnet associations. Chọn Lab Public Subnet. Nhấn Save associations. Kiểm tra thông tin route table đã được gắn kết với Lab Public Subnet và thông tin route đi Internet đã được trỏ đến Internet Gateway như hình dưới. "
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.2-creates3bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo 1 S3 bucket để lưu trữ các session logs được gửi từ các EC2 instance.\nTạo S3 Bucket Truy cập giao diện quản trị dịch vụ S3 Click Create bucket. Tại trang Create bucket. Tại mục Bucket name điền tên bucket lab-yourname-bucket-0001 Tại mục Region chọn Region bạn đang làm lab hiện tại. Tên S3 bucket phải đảm bảo không trùng với toàn bộ S3 bucket khác trong hệ thống. Bạn có thể thay thế tên mình và điền số ngẫu nhiên khi tạo tên S3 bucket.\nKéo chuột xuống phía dưới và click Create bucket. Khi tạo S3 bucket chúng ta đã thực hiện Block all public access nên các EC2 instance của chúng ta sẽ không thể kết nối tới S3 thông qua mạng internet. Trong bước tiếp theo chúng ta sẽ cấu hình tính năng S3 Gateway Endpoint để cho phép các EC2 instance có thể kết nối tới S3 bucket thông qua mạng nội bộ của VPC.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/",
	"title": "Tạo VPC Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSM Chúng ta sẽ tạo 3 interface endpoint yêu cầu bởi Session Manager: Interface endpoint: com.amazonaws.region.ssm com.amazonaws.region.ec2messages com.amazonaws.region.ssmmessages Bạn có thể tham khảo thêm tại đây\nNội dung: Tạo Endpoint ssm Tạo Endpoint ssmmessages Tạo Endpoint ec2messages "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.3-connectec2/",
	"title": "Kết nối EC2 Private",
	"tags": [],
	"description": "",
	"content": "Gán IAM role và restart EC2 instance. Truy cập giao diện quản trị dịch vụ EC2 Click chọn Private Windows Instance. Click Actions. Click Security. Click Modify IAM Role. Tại trang Modify IAM Role. Tại mục IAM role, chọn SSM-Role. Click Save. Click chọn Private Windows Instance. Click Instance state. Click Reboot instance để thực hiện restart, sau đó click Reboot để xác nhận. Bạn hãy đợi 5 phút trước khi làm bước tiếp theo nhé.\nKết nối tới máy chủ private EC2 instance. Truy cập vào giao diện quản trị dịch vụ System Manager - Session Manager Click Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig để kiểm tra thông tin địa chỉ IP của Private Windows Instance như dưới đây. "
},
{
	"uri": "//localhost:1313/vi/5-cicdpipeline/5.3-codebuild/",
	"title": "Tạo Build Project",
	"tags": [],
	"description": "",
	"content": "Tạo Build Project với CodeBuild Truy cập vào giao diện quản trị dịch vụ CodeBuild.\nNhấn Create build project. Trong Project name, nhập tên project, ví dụ: MyAppBuildProject. Tại mục Source, chọn CodeCommit.\nChọn repository mà bạn đã tạo ở phần CodeCommit. Tại Environment, chọn hệ điều hành, runtime, và image phù hợp với dự án của bạn.\nVí dụ: chọn Cloud 9 và Standard: 5.0. Tại Buildspec, chọn Insert build commands hoặc tạo file buildspec.yml.\nNhấn Create build project để hoàn tất.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.3-endpointec2messages/",
	"title": "Tạo Endpoint ec2messages",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint EC2MESSAGES Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSMMESSAGES. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: ec2 sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ec2messages. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ec2messages. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint EC2MESSAGES.\nĐảm bảo 3 endpoint cần thiết đã được tạo như hình dưới.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-iam-and-access/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Tạo IAM Role Trong bước này chúng ta sẽ tiến hành tạo IAM Role. Trong IAM Role này sẽ được gán policy AmazonSSMManagedInstanceCore, đây là policy cho phép máy chủ EC2 có thể giao tiếp với Session Manager.\nTruy cập vào giao diện quản trị dịch vụ IAM Ở thanh điều hướng bên trái, click Roles. Click Create role. Click AWS service và click EC2. Click Next: Permissions. Trong ô Search, điền AmazonSSMManagedInstanceCore và ấn phím Enter để tìm kiếm policy này. Click chọn policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Đặt tên cho Role là SSM-Role ở Role Name Click Create Role . Tiếp theo chúng ta sẽ thực hiện kết nối đến các máy chủ EC2 chúng ta đã tạo bằng Session Manager.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/",
	"title": "Tạo kết nối đến máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo kết nối đến các máy chủ EC2 của chúng ta, nằm trong cả public và private subnet.\nNội dung 3.1. Tạo Kết nối đến máy chủ EC2 Public 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-networking/2.1.3-createprivatesubnet/",
	"title": "Tạo Private Subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Private Subnet Nhấn chọn Subnets. Nhấn chọn Create subnet. Tại trang Create subnet. Tại mục VPC ID, chọn Lab VPC. Trong mục Subnet name, điền Lab Private Subnet. Tại mục Availability Zone, chọn Availability Zone đầu tiên. Trong mục IPv4 CIDR block, điền 10.10.2.0/24. Cuộn xuống cuối trang và nhấn chọn Create subnet. Bước tiếp theo là tạo các security groups cần thiết cho bài lab.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.3-creategwes3/",
	"title": "Tạo S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền S3GW. Tại mục Service Category click chọn AWS services. Tại ô tìm kiếm điền S3, sau đó chọn com.amazonaws.[region].s3 Tại mục Services chọn com.amazonaws.[region].s3 có Type là Gateway. Tại mục VPC , chọn Lab VPC. Tại mục Route tables, chọn cả 2 route table. Kéo chuột xuống dưới cùng, click Create endpoint. Bước tiếp theo chúng ta sẽ tiến hành cấu hình Session Manager để có thể lưu trữ các session logs tới S3 bucket chúng ta đã tạo.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/",
	"title": "Quản lý session logs",
	"tags": [],
	"description": "",
	"content": "Với Session Manager chúng ta có thể xem được lịch sử các kết nối tới các instance thông qua Session history. Tuy nhiên chúng ta chưa xem được chi tiết các câu lệnh được sử dụng.\nTrong phần này chúng ta sẽ tiến hành tạo S3 bucket và thực hiện cấu hình lưu trữ các session logs để xem được chi tiết các câu lệnh được sử dụng trong session.\nNội dung: Cập nhật IAM Role Tạo S3 Bucket Tạo S3 Gateway endpoint Cấu hình Session logs "
},
{
	"uri": "//localhost:1313/vi/5-cicdpipeline/5.4-ecr/",
	"title": "Tạo Repository trên ECR",
	"tags": [],
	"description": "",
	"content": "Tạo Repository trên ECR Truy cập vào giao diện quản trị dịch vụ ECR.\nNhấn Create repository. Trong Repository name, nhập tên repository, ví dụ: myapp-ecr-repo. Chọn các tùy chọn khác nếu cần, như scan on push để quét bảo mật khi đẩy image mới. Nhấn Create repository để hoàn tất.\nGhi lại URI của repository để sử dụng trong quá trình build và deploy Docker image.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-networking/2.1.4-createsecgroup/",
	"title": "Tạo Security Groups",
	"tags": [],
	"description": "",
	"content": "Tạo Security Groups Trong bước này, chúng ta sẽ tạo các security groups được sử dụng cho các instances. Những security groups này sẽ không cần mở các cổng truyền thống cho SSH như cổng 22 hoặc remote desktop qua cổng 3389.\nTạo Security Group cho Linux Instance trong Public Subnet Truy cập giao diện quản trị dịch vụ VPC. Nhấn chọn Security Group. Nhấn Create security group. Tại mục Security group name, điền SG Public Linux Instance. Trong phần Description, điền SG Public Linux Instance. Trong mục VPC, nhấn X để chọn lại Lab VPC đã tạo cho bài lab. Giữ nguyên thiết lập Outbound rule, cuộn xuống và nhấn Create security group. Như bạn thấy, security group này không cần mở các cổng truyền thống cho SSH như cổng 22.\nTạo Security Group cho Windows Instance trong Private Subnet Sau khi tạo security group cho Linux instance, nhấn vào liên kết Security Groups để quay lại danh sách. Nhấn Create security group. Tại mục Security group name, điền SG Private Windows Instance. Trong phần Description, điền SG Private Windows Instance. Trong mục VPC, nhấn X để chọn lại Lab VPC. Cuộn xuống. Thêm Outbound rule để cho phép kết nối TCP 443 tới 10.10.0.0/16 (CIDR của Lab VPC). Nhấn Create security group. Với instance trong private subnet, chúng ta sẽ kết nối tới endpoint của Session Manager qua kết nối được mã hóa TLS, do đó cần cho phép kết nối outbound từ instance tới VPC CIDR qua cổng 443.\nTạo Security Group cho VPC Endpoint Trong bước này, chúng ta sẽ tạo security group cho VPC Endpoint của Session Manager.\nSau khi tạo security group cho Windows instance, nhấn vào liên kết Security Groups.\nNhấn Create security group. Tại mục Security group name, điền SG VPC Endpoint.\nTrong phần Description, điền SG VPC Endpoint. Trong mục VPC, nhấn X để chọn lại Lab VPC. Cuộn xuống và xóa Outbound rule. Thêm Inbound rule cho phép TCP 443 từ 10.10.0.0/16 (CIDR của Lab VPC). Nhấn Create security group. Với các bước này, chúng ta đã hoàn thành việc tạo các security groups cần thiết cho EC2 instances và VPC Endpoints.\n"
},
{
	"uri": "//localhost:1313/vi/5-cicdpipeline/",
	"title": "Tổng Quan Về CI/CD Pipeline",
	"tags": [],
	"description": "",
	"content": "CI/CD Pipeline cho Triển Khai Tự Động Trong phần này, chúng ta sẽ thiết lập một CI/CD (Continuous Integration and Continuous Deployment) pipeline sử dụng các dịch vụ của AWS như CodeCommit, CodePipeline, CodeBuild, và ECR. Pipeline này sẽ tự động hóa quá trình triển khai, đảm bảo các bản cập nhật mã được tích hợp, xây dựng và triển khai một cách hiệu quả vào môi trường container hóa trên AWS.\nNội Dung 5.1 - CodeCommit: Thiết lập repository trên CodeCommit để quản lý phiên bản mã. 5.2 - CodePipeline: Tạo pipeline để tự động hóa quy trình CI/CD. 5.3 - CodeBuild: Cấu hình môi trường build để biên dịch và đóng gói mã nguồn. 5.4 - ECR: Thiết lập Amazon ECR để lưu trữ Docker images. Kết thúc phần này, bạn sẽ có một CI/CD pipeline hoạt động hoàn chỉnh có thể xử lý các bản cập nhật mã một cách tự động.\n"
},
{
	"uri": "//localhost:1313/vi/6-applicationdeployment/",
	"title": "Triển khai Ứng dụng",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ hướng dẫn cách triển khai ứng dụng container hóa trên AWS bằng Amazon ECS và Application Load Balancer (ALB). Các dịch vụ này cho phép tự động mở rộng và đảm bảo tính khả dụng cao cho ứng dụng của bạn, giúp ứng dụng có thể xử lý tải trọng biến động một cách hiệu quả.\nTổng quan về Triển khai Ứng dụng Các bước triển khai bao gồm:\nThiết lập ECS Cluster để quản lý ứng dụng container. Định nghĩa Task trong ECS để chỉ định chi tiết về container ứng dụng. Cấu hình Application Load Balancer để phân phối lưu lượng đều qua các container trong ECS Cluster. Làm theo từng phần dưới đây để hoàn tất cấu hình triển khai. Hướng dẫn này được thiết kế cho người mới bắt đầu để nắm bắt các kiến thức cơ bản về triển khai ứng dụng mở rộng trên AWS.\nNội dung Cấu hình ECS: Thiết lập ECS để quản lý ứng dụng container hiệu quả. Application Load Balancer: Tạo và liên kết ALB với ECS để phân phối lưu lượng. Tiếp tục với các phần tiếp theo để bắt đầu.\n"
},
{
	"uri": "//localhost:1313/vi/7-cleanup/",
	"title": "Dọn dẹp",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng tôi sẽ hướng dẫn chi tiết từng bước để dọn dẹp các tài nguyên đã tạo trong workshop này, giúp tránh các chi phí không cần thiết.\n1. Xóa Dịch vụ và Cluster ECS Truy cập ECS Console. Trong menu bên trái, chọn Clusters. Chọn Cluster bạn đã tạo cho workshop (ví dụ, LabCluster). Chọn tab Services và: Click vào từng dịch vụ. Chọn Update và đặt Desired tasks là 0 để dừng dịch vụ. Sau khi dịch vụ dừng, click Delete và xác nhận xóa. Sau khi xóa hết dịch vụ, quay lại danh sách Cluster. Chọn cluster và click Delete Cluster để xóa hoàn toàn. 2. Xóa Application Load Balancer (ALB) Truy cập EC2 Console. Trong menu bên trái, chọn Load Balancers. Chọn Application Load Balancer đã tạo cho workshop (ví dụ, LabALB). Click Actions \u0026gt; Delete và xác nhận xóa. 3. Xóa Auto Scaling Groups Trong EC2 Console, chọn Auto Scaling Groups từ menu bên trái. Tìm Auto Scaling Group liên quan đến cluster ECS của bạn. Chọn nó, click Delete và xác nhận xóa. 4. Xóa Elastic Container Registry (ECR) Repositories Truy cập ECR Console. Chọn Repositories từ menu bên trái. Click vào repository bạn đã tạo (ví dụ, LabRepo). Chọn Delete và xác nhận xóa repository cùng với nội dung. 5. Xóa S3 Buckets Truy cập S3 Console. Tìm Bucket đã tạo cho workshop (ví dụ, LabBucket). Click vào tên bucket. Trong tab Objects, chọn Empty bucket để xóa nội dung. Quay lại giao diện Buckets. Chọn bucket, click Delete bucket và xác nhận xóa. 6. Xóa IAM Roles và Policies Truy cập IAM Console. Trong menu bên trái, chọn Roles. Tìm các role đã tạo (ví dụ, LabRole hoặc SSM-Role). Click vào từng role và trong tab Permissions, hủy gán các policy liên quan (ví dụ, AmazonSSMFullAccess). Quay lại danh sách Roles, chọn role và click Delete Role để xóa. Lặp lại tương tự cho các Policies tùy chỉnh nếu cần. 7. Xóa VPC và các Thành phần Mạng Truy cập VPC Console. Trong phần Your VPCs: Chọn VPC đã tạo (ví dụ, LabVPC). Click Actions \u0026gt; Delete VPC và xác nhận. Đối với mỗi Subnet đã tạo: Truy cập Subnets trong menu bên trái. Chọn từng subnet liên quan đến LabVPC và click Delete. Truy cập Route Tables: Xóa các bảng định tuyến liên quan đến LabVPC. Truy cập Internet Gateways: Hủy liên kết gateway với LabVPC nếu có. Chọn gateway và click Delete Internet Gateway. 8. Dừng và Xóa EC2 Instances Truy cập EC2 Console. Trong phần Instances: Chọn các instance Public và Private đã tạo cho workshop. Click Actions \u0026gt; Instance State \u0026gt; Terminate. Xác nhận dừng và xóa. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]